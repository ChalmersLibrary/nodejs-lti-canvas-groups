doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    title nodejs-lti-canvas-groups
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(name='description', content='nodejs-lti-canvas-groups')
    meta(name='author', content='Rolf Johansson')
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css' integrity='sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN' crossorigin='anonymous')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Lato:300,400,400i,700&amp;subset=latin-ext&amp;display=swap')
    link(rel='stylesheet', href='/assets/styles/styles.css?v=1.4')
  body
    .container-fluid
      .row
        .col-lg-12.text-left
          if course.categories.length
            each category in course.categories
              if category.groups
                h2 #{category.name}

                div(class='button-bar')
                    if category.self_signup.enabled
                      button(type='button' class='btn btn-primary btn-sm btn-configure-self-signup' data-bs-toggle='modal' data-bs-target='#selfSignupConfigurationModal' data-category-id=category.id data-category-name=category.name) Self signup rule
                    button(type='button' class='btn btn-primary btn-sm btn-download-csv' data-category-id=category.id data-category-name=category.name) Download CSV for Excel
                    button(type='button' class='btn btn-primary btn-sm btn-download-csv-zoom' data-category-id=category.id data-category-name=category.name) Download CSV for Zoom Breakout Rooms
                    small Note: Students with custom email (ie Gmail) are not matched automatically in Zoom

                table(class='table table-sm')
                    thead
                      tr
                          th Group
                          th Student
                          th Email address

                    tbody
                      each group in category.groups
                          each user in group.users
                              tr
                                  td #{group.name}
                                  td #{user.sortableName}
                                  td #{user.email}

              else
                h2 #{category.name}
                p There are no groups in this groupset.

            hr

            div(class='button-bar')
                button(type='button' class='btn btn-primary btn-sm' id='btn-clear-caches' data-course-id=course.id) Clear all caches and reload
                  span(id="clearCachesButtonSpinner" class="spinner-border spinner-border-sm ms-1" style="display:none;" role="status" aria-hidden="true")
                small Use this if you have added groups or assignments recently that don't show up.

          else
            h2 Group Tool
            p(class='intro') This tool allows you to list and export groupsets, groups and members in a course.
            p If you see this message, there are no groupsets for this course. You can create them using the navigation link People and the tab Groups.
            p Only users with an administrative role in the course can see this tool, not Students.

          hr
          
          p
            small #{statistics.name} #{statistics.version} #{statistics.app_env} Node #{statistics.node} <!-- render time #{statistics.running_s}s, #{statistics.running_ms}ms. -->
            if user.isAdmin
              small 
                a(href='/dashboard') View admin dashboard
          
          div(class="modal modal-lg fade" id="selfSignupConfigurationModal" tabindex="-1" role="dialog" aria-labelledby="selfSignupConfigurationModalTitle" aria-hidden="true")
            div(class="modal-dialog" role="document")
              div(class="modal-content")
                form(id="selfSignupConfigurationForm" action="" class="")
                  div(class="modal-header")
                    h1(class="modal-title fs-5" id="selfSignupConfigurationModalTitle") Rule for self signup groups
                    button(type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close")
                  div(class="modal-body")
                    div(class="row")
                      div(class="col-lg-8")
                        p 
                          label(for="css_group_category_name" class="form-label") Group set
                          br
                          strong 
                            span(id="css_group_category_name")
                        div(class="mb-3")
                          label(for="css_assignment_id" class="form-label") Assignment
                          select(class="form-control" id="css_assignment_id")
                            option(value="") No assignment
                        div(class="mb-3")
                          label(for="css_min_points" class="form-label") Min points
                          input(class="form-control" type="number" id="css_min_points" data-default="1" value="1")
                        div(class="mb-3")
                          label(for="css_description" class="form-label") Description
                          input(class="form-control" type="text" id="css_description" data-default="" value="")
                          div(class="form-text") Displayed for a student trying to self signup when it's locked.
                      div(class="col-lg-4" style="border-left:1px solid lightgrey; padding-left:12px;")
                        p A student can only signup to a group in this set if a submission exists for the selected assignment and the grading is min points or higher.
                        p Be aware that this feature might fail, since it depends on an external service. If the server request fails, a student might still be able to join a group because the system don't know if to show or hide the Join button.
                    div(class="row")
                      div(class="col-lg-12 pt-4")
                        div(class="alert alert-success" id="successInformation" style="display:none;")
                        div(class="alert alert-warning" id="errorInformation" style="display:none;")
                  div(class="modal-footer")
                    button(type="button" id="modalCloseButton" class="btn btn-secondary" data-bs-dismiss="modal") Close
                    button(type="button" id="modalClearRuleButton" class="btn btn-primary" style="display:none;") Remove rule
                      span(id="modalClearRuleButtonSpinner" class="spinner-border spinner-border-sm" style="display:none;" role="status" aria-hidden="true")
                    button(type="submit" id="modalSubmitButton" class="btn btn-primary") 
                      span(id="modalSubmitButtonText") Save changes
                      span(id="modalSubmitButtonSpinner" class="spinner-border spinner-border-sm" style="display:none;" role="status" aria-hidden="true")

    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js' integrity='sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL' crossorigin='anonymous')
    script(src='/assets/js/script.js?v=1.4.4')
